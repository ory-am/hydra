// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/models"
)

// GetOAuth2ClientPublicReader is a Reader for the GetOAuth2ClientPublic structure.
type GetOAuth2ClientPublicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOAuth2ClientPublicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOAuth2ClientPublicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOAuth2ClientPublicUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOAuth2ClientPublicInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOAuth2ClientPublicOK creates a GetOAuth2ClientPublicOK with default headers values
func NewGetOAuth2ClientPublicOK() *GetOAuth2ClientPublicOK {
	return &GetOAuth2ClientPublicOK{}
}

/* GetOAuth2ClientPublicOK describes a response with status code 200, with default header values.

oAuth2Client
*/
type GetOAuth2ClientPublicOK struct {
	Payload *models.OAuth2Client
}

func (o *GetOAuth2ClientPublicOK) Error() string {
	return fmt.Sprintf("[GET /connect/register][%d] getOAuth2ClientPublicOK  %+v", 200, o.Payload)
}
func (o *GetOAuth2ClientPublicOK) GetPayload() *models.OAuth2Client {
	return o.Payload
}

func (o *GetOAuth2ClientPublicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuth2Client)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOAuth2ClientPublicUnauthorized creates a GetOAuth2ClientPublicUnauthorized with default headers values
func NewGetOAuth2ClientPublicUnauthorized() *GetOAuth2ClientPublicUnauthorized {
	return &GetOAuth2ClientPublicUnauthorized{}
}

/* GetOAuth2ClientPublicUnauthorized describes a response with status code 401, with default header values.

genericError
*/
type GetOAuth2ClientPublicUnauthorized struct {
	Payload *models.GenericError
}

func (o *GetOAuth2ClientPublicUnauthorized) Error() string {
	return fmt.Sprintf("[GET /connect/register][%d] getOAuth2ClientPublicUnauthorized  %+v", 401, o.Payload)
}
func (o *GetOAuth2ClientPublicUnauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetOAuth2ClientPublicUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOAuth2ClientPublicInternalServerError creates a GetOAuth2ClientPublicInternalServerError with default headers values
func NewGetOAuth2ClientPublicInternalServerError() *GetOAuth2ClientPublicInternalServerError {
	return &GetOAuth2ClientPublicInternalServerError{}
}

/* GetOAuth2ClientPublicInternalServerError describes a response with status code 500, with default header values.

genericError
*/
type GetOAuth2ClientPublicInternalServerError struct {
	Payload *models.GenericError
}

func (o *GetOAuth2ClientPublicInternalServerError) Error() string {
	return fmt.Sprintf("[GET /connect/register][%d] getOAuth2ClientPublicInternalServerError  %+v", 500, o.Payload)
}
func (o *GetOAuth2ClientPublicInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetOAuth2ClientPublicInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
