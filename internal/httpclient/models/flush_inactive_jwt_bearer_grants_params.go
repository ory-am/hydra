// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FlushInactiveJwtBearerGrantsParams flush inactive jwt bearer grants params
//
// swagger:model flushInactiveJwtBearerGrantsParams
type FlushInactiveJwtBearerGrantsParams struct {

	// The "notAfter" sets after which point grants should not be flushed. This is useful when you want to keep a history
	// of recently added grants.
	// Format: date-time
	NotAfter strfmt.DateTime `json:"notAfter,omitempty"`
}

// Validate validates this flush inactive jwt bearer grants params
func (m *FlushInactiveJwtBearerGrantsParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNotAfter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FlushInactiveJwtBearerGrantsParams) validateNotAfter(formats strfmt.Registry) error {

	if swag.IsZero(m.NotAfter) { // not required
		return nil
	}

	if err := validate.FormatOf("notAfter", "body", "date-time", m.NotAfter.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FlushInactiveJwtBearerGrantsParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FlushInactiveJwtBearerGrantsParams) UnmarshalBinary(b []byte) error {
	var res FlushInactiveJwtBearerGrantsParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
